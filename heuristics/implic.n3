@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix : <http://example.org/> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix dfg: <http://rdf.org/dfg#> .

{
    ?l dfg:from ?from ; dfg:to ?to ; dfg:source dfg:normative
} => {
    { ?to dfg:link ?l . ?l dfg:source dfg:discovered } => { [ dfg:from ?from ; dfg:to ?to ; dfg:causeOf ?to ; dfg:source dfg:discovered ] }
} .

{
    ?ln1 dfg:from ?from ; dfg:to ?to1 ; dfg:source dfg:normative .
    ?ln2 dfg:from ?from ; dfg:to ?to2 ; dfg:source dfg:normative .
    ?to1 log:notEqualTo ?to2 .

    ?ld1 dfg:from ?from ; dfg:to ?to1 ; dfg:source dfg:discovered .
    ?ld2 dfg:from ?from ; dfg:to ?to2 ; dfg:source dfg:discovered .
} => {
    [
        a dfg:Inconsistency ;
        dfg:from ?from ;
        dfg:to ?to1 , ?to2 ;
        rdfs:label "following mutually exclusive branches"
    ]
} .


# helpers

{ ?m list:notIn ?lst } 
<= { (1 { ?m list:in ?lst } ()) log:collectAllIn _:t } .

{ ?e dfg:link ?l }
<= { ?l dfg:from ?e } .

{ ?e dfg:link ?l }
<= { ?l dfg:to ?e } .


# example data

# discovered: x -> e

# normative implications (bertoli et al.), i.e., if link a->b, then implic b=>a
# e => c
#     e ==> c
# l \or c => k
#     c ==> k , c ==> not l
# d \or c => b
#     c ==> b, c ==> not d
# a \or b => x
#     b ==> x, b ==> not a
# k \or x => y
#     k ==> y, not x
#     x ==> y, not k !! accidenti
# y => z

[
    dfg:from :z ;
    dfg:to :y ;
    dfg:source dfg:normative 
] .

[
    dfg:from :z ;
    dfg:to :m ;
    dfg:source dfg:normative 
] .

[
    dfg:from :y ;
    dfg:to :x ;
    dfg:source dfg:normative 
] .

[
    dfg:from :y ;
    dfg:to :k ;
    dfg:source dfg:normative 
] .

[
    dfg:from :k ;
    dfg:to :c ;
    dfg:source dfg:normative 
] .

[
    dfg:from :k ;
    dfg:to :l ;
    dfg:source dfg:normative 
] .

[
    dfg:from :x ;
    dfg:to :a ;
    dfg:source dfg:normative 
] .

[
    dfg:from :x ;
    dfg:to :b ;
    dfg:source dfg:normative 
] .

[
    dfg:from :b ;
    dfg:to :c ;
    dfg:source dfg:normative 
] .

[
    dfg:from :b ;
    dfg:to :d ;
    dfg:source dfg:normative 
] .

[
    dfg:from :c ;
    dfg:to :e ;
    dfg:source dfg:normative 
] .

[
    dfg:from :x ;
    dfg:to :e ;
    dfg:source dfg:discovered 
] .