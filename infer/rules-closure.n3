@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix dfg: <http://rdf.org/dfg#> .
@prefix : <http://example.org/> .

# RUN:
# eye utils.n3 rules-closure.n3 data/tc/all/norm.n3 --nope --pass-only-new > data/tc/all/norm_closure_all.n3
# eye utils.n3 data/tc/all/norm.n3 data/tc/all/norm_closure_all.n3 --query rules-closure-query.n3 --nope > data/tc/all/norm_closure.n3
# eye utils.n3 rules-closure.n3 data/tests/test2-norm.n3 --nope --pass-only-new > data/out/test2-norm-closure.n3

# start from the top
{   ?l dfg:from ?root ; dfg:source dfg:normative .
    ( 1 { ?l2 dfg:to ?root ; dfg:source dfg:normative . } () ) log:collectAllIn _:t .    

} => { ?root dfg:ancestors ( ) } .

# then propagate down
{   ?x dfg:from ?y ; dfg:to ?to ; dfg:source dfg:normative .

    # collect all parents
    ( ?from
        {
            ?l dfg:from ?from ; dfg:to ?to ; dfg:source dfg:normative .
        }
    ?parents ) log:collectAllIn _:t .

    # collect all parent's ancestors
    ( ?ancestors2
        {
            ?l dfg:from ?from ; dfg:to ?to ; dfg:source dfg:normative .
            ?from dfg:ancestors ?ancestors .

            ?to list:notIn dfg:ancestors .
            ( ( ?from ) ?ancestors ) list:append ?ancestors2 
        }
    ?parent_ancestors ) log:collectAllIn _:t .

    # ensure we got all the parents' ancestors
    ?parents list:length ?parent_ancestors!list:length .
    
    ?parent_ancestors!list:flatten list:unique ?to_ancestors

} => { ?to dfg:ancestors ?to_ancestors } .